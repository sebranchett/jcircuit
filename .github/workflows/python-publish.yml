# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and upload Python Package

on:
  push:
    tags:
      - 'v*'
      - 'testv*'

permissions:
  contents: write

jobs:
  release-build:
    name: Build distributions
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # For a full release, publish to PyPI and create a GitHub release                
  pypi-publish:
    name: Publish to PyPI
    # publish to PyPI on tag pushes starting with 'v'
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - release-build

    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/jcircuit

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true

  # For a pre-release, publish to TestPyPI and create a GitHub pre-release
  publish-to-testpypi:
    name: Publish to TestPyPI
    # publish to TestPyPI on tag pushes starting with 'testv'
    if: startsWith(github.ref, 'refs/tags/testv')
    runs-on: ubuntu-latest
    needs:
      - release-build

    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://test.pypi.org/p/jcircuit

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/

      - name: Create GitHub Pre-Release
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          generateReleaseNotes: true
